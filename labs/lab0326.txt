
====字符串=======
3.下列代码可以保存到.py文件或者通过交互式shell执行，观察结果

s1 = '"Thank you!" she said. '
print(s1)

s2 = '测试中文 now'
print(s2)

# 字符串界定符为'，内容包括'时必须转义  
s3 = 'It's ok. "Thank you very much!" she said.'
print(s3)

# 两个连续或者通过空格类字符串分割的字符串会连接在一起
sa3 = "It's ok. "  '"Thank you very much!" she said.'
print(sa3)

# 两个连续或者通过空格类字符串分割的字符串会连接在一起
# 注意第一行最后为\，后面不能有空格  
sa3 = "It's ok. "       \
     '"Thank you very much!" she said.'
print(sa3)

# 采用三单引号定界，单引号无需转义
s4 = '''It's ok. "Thank you very much!" she said.'''
print(s4)

#采用三单引号定界:  可以跨越多行，无需用\n转义
s3 = '''It's ok.
"Thank you very much!" she said.'''
print(s3)

#采用三单引号定界，单引号无需转义，但是转义也可以 
s5 = '''It\'s ok. "Thank you very much!" she said.'''
print(s5)

#采用三单引号定界:  \n表示换行
s2 = '''It's ok.\n"Thank you very much!" she said.'''
print(s2)

print()

4.# 原始字符串r/R在定界符之前
s1 = r'c:\users\xxx\python32\lib'
print(s1) 

s2 = r'''c:\users\xxx\python32\lib'''
print(s2) 

# 不用原始字符串，需要转义 
s4 = 'c:\\users\\xxx\\python32\\lib'
print(s4)

注意：如果不转义，会出错 truncated \uXXXX escape  truncated \xXX escape 

# 已知原始字符串，repr给出了可以通过eval(repr(s2))得到相同值的str对象的字符串
s3 = repr(s2)
print(s3)

print() 
#原始字符串里面包含了定界符怎么办，可以选择其他定界符 
s1 = r'c:\users\xxx\"python 32"\lib'
print(s1) 

# 原始字符串最后不能为\

#s1 = r'c:\\users\\xxx\\python32\\lib\'     # 将报语法错

print() 
s1 = r'c:\users\xxx\python32\lib' + '\\'
s2 = r'c:\users\xxx\python32\lib'  '\\'
print(s1)
print(s2)

5.运算符和函数
print('-'*70)
print('-'*21 + '现在测试字符串的运算符和方法' + 21*'-')
i = 252
i2 = int('FC',16) 
s1 = str(i) 
print('bin(%s)=%s' % (s1, bin(i)))
print('oct(%d)=%s' % (i, oct(i)))
print('hex(%s)=%s' % (str(i2), hex(i2)))

print() 
b='\141b\x61'  # 'aba',  ord('a')=97，八进制为141，十六进制为61   
print("'\\141b\\x61' is %s" % b) 
print("ord('%s'[0])=%d" % (b, ord(b[0]))) 
print("'%s'[1] == %c == chr(%d)" % (b, b[1],ord(b[0])+1) )

print() 

# 字符串格式化的用法以浮点数为例 
f1 = float('1230.141592653589793')
print('(%f)  format string:%%f' % f1)
print('(%.4f)  format string:%%.4f' % f1)
print('(%8.f)  format string:%%8.f' % f1)
print('(%8.4f)  format string:%%8.4f' % f1)
print('(%08.4f)  format string:%%08.4f' % f1)
print('(%8.2f)  format string:%%8.2f' % f1)
