1) 要产生一个0到5之间的随机数，应该采用哪个代码？
 A. random.randint(0, 5)
 B. random.randint(0, 6)
 C. random.randrange(0, 5)
 D. random.randrange(0, 6) 




2). 理解import机制 

下列代码保存到 module_test.py
运行module_test.py，观察结果，特别是 __name__的取值 

def func1( ):
    print('calling func1 in %s....' % __name__)

def func2( ):
    print('calling func2 in %s....' % __name__)

def func3( ):
    print('calling func3 in %s....' % __name__)

def func4( ):
    print('calling func4 in %s....' % __name__)

print('模块 module_test....')
print('__name__=%s' % __name__)
print('__file__=%s' % __file__)


func4()

------------------------------------------------------------------------

下列代码保存到 module_test_import.py
运行module_test_import.py，观察结果 

print('import module_test....') 
import module_test

print('\nimport module_test as mod_test......') 
import module_test as mod_test

print('\nfrom module_test import func1,func2......') 
from module_test import func1,func2

print()
print('afer import....')
print('__name__=%s' % __name__)
print('__file__=%s' % __file__,end='\n\n')

print('module object(module_test):',module_test)
print('module object(mod_test):',mod_test)
print('module_test is mod_test)?...',mod_test is module_test)
print('module_test.func1 is mod_test.func1)?...',mod_test.func1 is module_test.func1)
print('module_test.func1 is func1)?...',module_test.func1 is func1)

print()
module_test.func1()

mod_test.func1()

func1()

func2()


print('\nbe careful when using from module import *....') 
def func4(x):
    print("another func4...") 

func4(1)

local_func4 = func4   # save func 

print('\nfrom module_test import *') 
print('\nfunc4 is overrided by func from module_test') 

from module_test import *

func4()

print('local_func4 == func4?....', local_func4 is func4) 


